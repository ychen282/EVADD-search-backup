{"ast":null,"code":"var _jsxFileName = \"/Users/yunxichen/Desktop/EvAdd/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // import App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport logo from \"./logo.svg\";\nimport { Form, InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction isolations() {\n  return [{\n    id: 1,\n    title: \"ultracentrifugation\",\n    completed: false\n  }, {\n    id: 2,\n    title: \"density gradient\",\n    completed: false\n  }, {\n    id: 3,\n    title: \"size exclusion chromatography\",\n    completed: false\n  }];\n}\n\nfunction App() {\n  const inputstyle = {\n    width: \"50px\",\n    padding: \"10px\",\n    magin: \"20px\"\n  };\n  const methods = isolations();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: inputstyle,\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"pubmedID\",\n          placeholder: \"PubMed ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"gene\",\n          placeholder: \"Gene\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"Example: GAPDH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicCheckbox\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"Check me out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false)\n  /*     <div className=\"App\">\n           <header className=\"App-header\">\n               <img src={logo} className=\"App-logo\" alt=\"logo\" />\n               <p>\n                   Edit <code>src/App.js</code> and save to reload.\n               </p>\n               <a\n                   className=\"App-link\"\n                   href=\"https://reactjs.org\"\n                   target=\"_blank\"\n                   rel=\"noopener noreferrer\"\n               >\n                   Learn React\n               </a>\n           </header>\n       </div> */\n  ;\n}\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 97,\n  columnNumber: 5\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yunxichen/Desktop/EvAdd/src/index.js"],"names":["React","ReactDOM","reportWebVitals","logo","Form","InputGroup","FormControl","Button","isolations","id","title","completed","App","inputstyle","width","padding","magin","methods","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAAQC,IAAR,EAAcC,UAAd,EAA0BC,WAA1B,EAAuCC,MAAvC,QAAoD,iBAApD;AACA,OAAO,sCAAP;;;;AAEA,SAASC,UAAT,GAAqB;AACjB,SAAO,CACH;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,qBAFX;AAGIC,IAAAA,SAAS,EAAE;AAHf,GADG,EAMH;AACIF,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,kBAFX;AAGIC,IAAAA,SAAS,EAAE;AAHf,GANG,EAWH;AACIF,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,+BAFX;AAGIC,IAAAA,SAAS,EAAE;AAHf,GAXG,CAAP;AAiBH;;AAED,SAASC,GAAT,GAAe;AACX,QAAMC,UAAU,GAAC;AACbC,IAAAA,KAAK,EAAE,MADM;AAEbC,IAAAA,OAAO,EAAE,MAFI;AAGbC,IAAAA,KAAK,EAAE;AAHM,GAAjB;AAKA,QAAMC,OAAO,GAAGT,UAAU,EAA1B;AACA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAEK,UAAvB;AAAmC,QAAA,SAAS,EAAC,gBAA7C;AAAA,gCAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,WAAW,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAKI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,mBAAvC;AAAA,+BACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,IAAI,EAAC,UAAjB;AAA4B,UAAA,KAAK,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ,eAeI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAsCL;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtDI;AAwDH;;KA/DQD,G;AAiETX,QAAQ,CAACiB,MAAT,eAEI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAFJ,EAEaC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFb,E,CAIA;AACA;AACA;;AACAlB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport logo from \"./logo.svg\";\nimport {Form, InputGroup, FormControl, Button} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction isolations(){\n    return [\n        {\n            id: 1,\n            title: \"ultracentrifugation\",\n            completed: false,\n        },\n        {\n            id: 2,\n            title: \"density gradient\",\n            completed: false,\n        },\n        {\n            id: 3,\n            title: \"size exclusion chromatography\",\n            completed: false,\n        }\n    ]\n}\n\nfunction App() {\n    const inputstyle={\n        width: \"50px\",\n        padding: \"10px\",\n        magin: \"20px\",\n    };\n    const methods = isolations();\n    return (\n        <>\n            <Form>\n                <Form.Group className={inputstyle} controlId=\"formBasicEmail\">\n                    {/*<Form.Label>Email address</Form.Label>*/}\n                    <Form.Control type=\"pubmedID\" placeholder=\"PubMed ID\" />\n                    <Form.Control type=\"gene\" placeholder=\"Gene\" />\n\n                    <Form.Text className=\"text-muted\">\n                        Example: GAPDH\n                    </Form.Text>\n                </Form.Group>\n\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n                {/*<ul>*/}\n                {/*    {methods.map((method) => (*/}\n                {/*        <InputGroup key={method.id}>*/}\n                {/*            <InputGroup.Checkbox checked={method.completed} />*/}\n                {/*            <FormControl*/}\n                {/*                value = {method.title}*/}\n                {/*                style={{textDecoration: method.completed ? \"line-through 4px\" : \"none\",*/}\n                {/*                }}*/}\n                {/*            />*/}\n                {/*        </InputGroup>*/}\n\n                {/*    ))}*/}\n                {/*</ul>*/}\n                {/*<Button variant=\"success\">Submit</Button>*/}\n            </Form>\n\n\n        </>\n\n   /*     <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Learn React\n                </a>\n            </header>\n        </div> */\n    );\n}\n\nReactDOM.render(\n\n    <App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}